// api/server.js

// ‚ùóÔ∏è –ú—ã —É–±—Ä–∞–ª–∏ "const fetch = require('node-fetch');" —Å–≤–µ—Ä—Ö—É

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫, –∫–æ—Ç–æ—Ä—É—é Vercel –±—É–¥–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å
module.exports = async (req, res) => {
    // –†–∞–∑—Ä–µ—à–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã —Å –ª—é–±–æ–≥–æ –¥–æ–º–µ–Ω–∞ (CORS)
    res.setHeader('Access-Control-Allow-Origin', '*');
    res.setHeader('Access-Control-Allow-Methods', 'POST, OPTIONS');
    res.setHeader('Access-Control-Allow-Headers', 'Content-Type');

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ OPTIONS –æ—Ç –±—Ä–∞—É–∑–µ—Ä–∞
    if (req.method === 'OPTIONS') {
        return res.status(200).end();
    }

    // –ü—Ä–∏–Ω–∏–º–∞–µ–º —Ç–æ–ª—å–∫–æ POST-–∑–∞–ø—Ä–æ—Å—ã
    if (req.method !== 'POST') {
        return res.status(405).json({ success: false, error: 'Method Not Allowed' });
    }
    
    // üîê –ü–æ–ª—É—á–∞–µ–º —Å–µ–∫—Ä–µ—Ç–Ω—ã–µ –∫–ª—é—á–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è Vercel
    const { TELEGRAM_BOT_TOKEN, TELEGRAM_CHAT_ID } = process.env;

    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞
    const { name, email, message } = req.body;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏—à–ª–∏
    if (!name || !email || !message) {
        return res.status(400).json({ success: false, error: '–í—Å—ñ –ø–æ–ª—è —î –æ–±–æ–≤ º—è–∑–∫–æ–≤–∏–º–∏ –¥–ª—è –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è' });
    }

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è Telegram
    const text = `–ù–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —Å–∞–π—Ç—É! \n\n*–Ü–º'—è:* ${name}\n*Email:* ${email}\n*–°–æ–æ–±—â–µ–Ω–∏–µ:*\n${message}`;

    // URL –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –∫ Telegram API
    const url = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`;
    
    const options = {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
            chat_id: TELEGRAM_CHAT_ID,
            text: text
        })
    };

    try {
        // ‚úÖ –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º node-fetch –ø—Ä—è–º–æ –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º
        const fetch = (await import('node-fetch')).default;

        const response = await fetch(url, options);
        const data = await response.json();

        if (data.ok) {
            res.status(200).json({ success: true, message: '–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ!' });
        } else {
            res.status(500).json({ success: false, error: '–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ –≤ Telegram.' });
        }
    } catch (error) {
        console.error(error); // –î–æ–±–∞–≤–∏–º –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        res.status(500).json({ success: false, error: '–í–Ω—É—Ç—Ä—ñ—à–Ω—è –ø–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞.' });
    }
};